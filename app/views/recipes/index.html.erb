  <%= render "recipes/banner" %>
  <button onclick="topFunction()" id="topbtn" title="Go to top">Top</button>


<!-- <h2 class="text-center">ALL OUR RECIPES:</h2> -->

<div class="container container-recipes">

  <div class="row" id="recipes">

    <% if @recipes.blank? %>
      <h4>There are no recipes containing the term <%= params[:search] %>.</h4>
    <% end %>

    <% @recipes.each do |recipe| %>

      <div class="col-xs-12 col-sm-3 col-md-3">

        <div class="card-container">

          <%= link_to recipe_path(recipe) do %>
            <div class="card" style="background-image: linear-gradient(rgba(0,0,0,0), rgba(0,0,0,0)), url('<%= if recipe.picture.url == nil
                image_path('https://placeholdit.co//i/500x500?')
              else
                cl_image_path recipe.picture.url
              end
              %>')">
            </div>
          <% end %>


          <div class="card-description">
            <% arr = [] %>
            <%if recipe.reviews.size != 0 %>
              <% recipe.reviews.each do |review| %>
                <% arr << review.rating %>
              <% end %>
              <% average = arr.inject{ |sum, el| sum + el }.to_f / arr.size %>
              <p> <%= average.round(1) if average %> / 5</p>
            <%end%>
          </div>

          <div class="link-box">
            <%= link_to recipe_path(recipe) do %>
              <%=recipe.name.capitalize %>
              <% if current_user %>
                <% if Favorite.where(recipe_id: recipe.id, user_id: current_user.id).count > 0 %>
                  <%= link_to favorite_path(recipe), :method => :delete, remote: true, class: "favorite" do %>
                     &nbsp &nbsp<span class="fa fa-heart info"></span>
                  <% end %>
                <% else %>
                  <%= link_to favorites_path(recipe_id: recipe.id), :method => :post, remote: true, class: "favorite" do %>
                   &nbsp &nbsp <span class="fa fa-heart-o"></span>
                  <% end %>
                <% end %>
              <% end %>
            <% end %>
          </div>

        </div>

      </div>

    <% end %>

  </div>
</div>


<%= content_for :after_js do %>

  <script>
    var client = algoliasearch("AMLNOKWPBJ", "5b8cb611c7a8bc80b876e4f7abbb1517");
    var index = client.initIndex('Ingredient_production');

    const searchbar = document.getElementById("aa-search-input");
    const recipes = document.getElementById('recipes');
    const banner = document.getElementById("banner");
    const marketing_promise = document.getElementById("marketing-promise");
    var recipe_html = recipes.innerHTML;
    var banner_class = banner.classList;
    var banner_html = banner.innerHTML;
    var marketing_promise_html = marketing_promise.innerHTML;


    const search = (event) => {
      index.search(
        {
          query: searchbar.value,
          hitsPerPage: 10,
        },
        function searchDone(err, content) {
          if (err) {
            console.error(err);
            return;
          }
          // console.log(content)
          recipes.innerHTML = "";
          marketing_promise.innerHTML = "<br><br><br><br>";
          banner.classList.remove("banner");
          banner.classList.add("banner-search");
          if (!searchbar.value == "") {
            const displayed_recipes = [];
            content.hits.forEach((hit) => {
              hit['ingredient_recipes'].forEach((recipe, i) => {
                // if (!displayed_recipes.includes(hit["ingredient_recipes"][i]["id"])) {
                if (hit.name.includes(searchbar.value)) {
                  displayed_recipes.push(hit["ingredient_recipes"][i]["id"])
                  recipes.insertAdjacentHTML("beforeend", `
                    <div class="col-xs-12 col-sm-6 col-md-4">
                      <a href="/recipes/${hit["ingredient_recipes"][i]["id"]}">
                        <div class="card" style="background-image: linear-gradient(rgba(0,0,0,0), rgba(0,0,0,0)), url('${hit["ingredient_recipes"][i]["picture"]["url"]}')">
                        </div>
                      </a>
                      <div class="link-box">
                        <a href="/recipes/${hit["ingredient_recipes"][i]["id"]}">${hit["ingredient_recipes"][i]["name"]}</a>
                      </div>
                    </div>
                  `)
                }
                // }
              })
            })
          } else {
            recipes.insertAdjacentHTML("beforeend", `${recipe_html}`);
            banner.classList.remove('banner-search');
            banner.classList.add("banner");
            marketing_promise.innerHTML = marketing_promise_html;
          }
        }
      );
    }

    searchbar.addEventListener("keyup", search);

    //initialize Algolia autocomplete on search input (ID selector must match)

    autocomplete('#aa-search-input',
    { hint: false,
    autoselect: true }, {
        source: autocomplete.sources.hits(index, {hitsPerPage: 3}),
        //value to be displayed in input control after user's suggestion selection
        displayKey: 'name',
        //hash of templates used when rendering dataset
        templates: {
          //'suggestion' templating function used to render a single suggestion
          suggestion: function(suggestion) {
            // if (suggestion.name.includes(searchbar.value)) {
            // console.log(suggestion)
             return '<span>' +
            suggestion._highlightResult.name.value+ '</span>';

          }
        }
    });


    //prevent default behaviour of the search form (i.e prevent from refreshing)
    const bindConfirm = (element) => {
      element.addEventListener("submit", (event) => {
          event.preventDefault();
      });
    };
    document.querySelectorAll(".confirmable").forEach(bindConfirm);



    const btns = document.querySelectorAll('.favorite');
    btns.forEach((btn) => {
      btn.addEventListener('click', (event) => {
          const span = btn.querySelector('span');
          span.classList.toggle('fa-heart');
          span.classList.toggle('fa-heart-o');
      });
    });

    // When the user scrolls down 20px from the top of the document, show the button
//window.onscroll = function() {scrollFunction()};

//function scrollFunction() {
  //  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
    //    document.getElementById("topbtn").style.display = "block";
   // } else {
     //   document.getElementById("topbtn").style.display = "none";
   // }
//}

// When the user clicks on the button, scroll to the top of the document
//function topFunction() {
  //  document.body.scrollTop = 0;
    //document.documentElement.scrollTop = 0;
//}



  </script>
<% end %>




